const tg = window.Telegram.WebApp;
tg.expand();

const cartToggle = document.getElementById('cart-toggle');
const cart = document.getElementById('cart');
const cartItemsList = document.getElementById('cart-items');
const cartTotal = document.getElementById('cart-total');
const sendOrderBtn = document.getElementById('send-order');
const products = document.querySelectorAll('.product');

let cartItems = [];

// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
const user = tg.initDataUnsafe.user;
let userInfo = '';

if (user) {
    userInfo = `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.first_name}${user.last_name ? ' ' + user.last_name : ''}`;
    if (user.username) userInfo += ` (@${user.username})`;
    userInfo += `\nüÜî ID: ${user.id}\n`;
} else {
    userInfo = 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: –ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω (–¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã)\n';
}

function updateCartUI() {
    cartItemsList.innerHTML = '';
    let total = 0;

    cartItems.forEach((item, index) => {
        const li = document.createElement('li');
        li.style.cssText = 'display: flex; justify-content: space-between; align-items: center; margin: 5px 0; padding: 5px; background: #f9f9f9; border-radius: 5px;';

        const itemText = document.createElement('span');
        itemText.textContent = `${item.name} ‚Äî ${item.price} BYN`;

        const removeBtn = document.createElement('button');
        removeBtn.textContent = '‚ùå';
        removeBtn.style.cssText = 'background: #ff4444; color: white; border: none; border-radius: 50%; width: 25px; height: 25px; cursor: pointer;';

        removeBtn.onclick = () => {
            cartItems.splice(index, 1);
            products.forEach(p => {
                if(p.dataset.name === item.name) {
                    p.querySelector('button').classList.remove('in-cart');
                    p.querySelector('button').textContent = '–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É';
                }
            });
            updateCartUI();
        };

        li.appendChild(itemText);
        li.appendChild(removeBtn);
        cartItemsList.appendChild(li);
        total += Number(item.price);
    });

    cartTotal.textContent = total;
    document.getElementById('cart-count').textContent = cartItems.length;
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É
products.forEach(product => {
    const btn = product.querySelector('.order-btn');
    btn.addEventListener('click', () => {
        const name = product.dataset.name;
        const price = product.dataset.price;

        if(cartItems.some(i => i.name === name)) {
            alert('–≠—Ç–æ—Ç —Ç–æ–≤–∞—Ä —É–∂–µ –≤ –∫–æ—Ä–∑–∏–Ω–µ!');
            return;
        }

        cartItems.push({name, price});
        btn.classList.add('in-cart');
        btn.textContent = '‚úì –í –∫–æ—Ä–∑–∏–Ω–µ';
        updateCartUI();

        // –ü–æ–∫–∞–∑–∞—Ç—å –∫–æ—Ä–∑–∏–Ω—É –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–µ—Ä–≤–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        if (cartItems.length === 1) {
            cart.classList.add('show');
        }
    });
});

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω–æ–π
cartToggle.addEventListener('click', (e) => {
    e.stopPropagation();
    cart.classList.toggle('show');
});

document.addEventListener('click', (e) => {
    if (!cart.contains(e.target) && e.target !== cartToggle) {
        cart.classList.remove('show');
    }
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–∞–∑–∞ - –¢–ï–ü–ï–†–¨ –ü–†–Ø–ú–ê–Ø –°–°–´–õ–ö–ê –ù–ê –¢–ï–õ–ï–ì–†–ê–ú
sendOrderBtn.addEventListener('click', () => {
    if (cartItems.length === 0) {
        alert('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!');
        return;
    }

    let orderText = "üõí –î–ï–¢–ê–õ–ò –ó–ê–ö–ê–ó–ê üõí\n\n";
    orderText += userInfo + "\n";
    orderText += "üì¶ –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n";

    let total = 0;
    cartItems.forEach(item => {
        orderText += `‚Ä¢ ${item.name} ‚Äî ${item.price} BYN\n`;
        total += Number(item.price);
    });

    orderText += `\nüí∞ –ò—Ç–æ–≥–æ: ${total} BYN`;
    orderText += `\n‚è∞ –í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`;

    console.log('–§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–∫–∞–∑:', orderText);

    // –ö–æ–¥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞ –¥–ª—è URL
    const encodedOrder = encodeURIComponent(orderText);

    // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∞—à Telegram —Å –≥–æ—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    const telegramUrl = `https://t.me/bigdigovich?text=${encodedOrder}`;

    // –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Å—ã–ª–∫—É –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
    window.open(telegramUrl, '_blank');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
    alert('‚úÖ –ó–∞–∫–∞–∑ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω! –û—Ç–∫—Ä—ã–≤–∞—é Telegram...\n\n–ï—Å–ª–∏ Telegram –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:\n1. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞\n2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ @bigdigovich\n3. –í—Å—Ç–∞–≤—å—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∑–∞–∫–∞–∑');

    // –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
    cartItems = [];
    updateCartUI();
    cart.classList.remove('show');

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º WebApp —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
    setTimeout(() => {
        tg.close();
    }, 2000);
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(() => {
        console.log('–¢–µ–∫—Å—Ç —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞');
    }).catch(err => {
        console.error('–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è: ', err);
    });
}